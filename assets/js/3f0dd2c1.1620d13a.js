"use strict";(self.webpackChunkcommunity_flake_parts=self.webpackChunkcommunity_flake_parts||[]).push([[227],{2053:(e,l,a)=>{a.r(l),a.d(l,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var s=a(5893),t=a(1151);const n={slug:"/haskell-flake/debugging"},r="Debugging logs",i={id:"modules/haskell-flake/guide/debugging",title:"Debugging logs",description:"This feature is available only in Nix versions 2.10 or later.",source:"@site/docs/modules/haskell-flake/guide/debugging.md",sourceDirName:"modules/haskell-flake/guide",slug:"/haskell-flake/debugging",permalink:"/haskell-flake/debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/srid/haskell-flake/blob/master/doc/guide/debugging.md",tags:[],version:"current",frontMatter:{slug:"/haskell-flake/debugging"},sidebar:"tutorialSidebar",previous:{title:"Guide",permalink:"/haskell-flake/guide"},next:{title:"Overriding dependencies",permalink:"/haskell-flake/dependency"}},o={},c=[{value:"See also",id:"see-also",level:2}];function d(e){const l={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.h1,{id:"debugging-logs",children:"Debugging logs"}),"\n",(0,s.jsx)(l.admonition,{type:"warning",children:(0,s.jsx)(l.p,{children:"This feature is available only in Nix versions 2.10 or later."})}),"\n",(0,s.jsxs)(l.p,{children:["Passing ",(0,s.jsx)(l.code,{children:"--trace-verbose"})," to Nix commands causes haskell-flake to print verbose logging of its activity. To enable it:"]}),"\n",(0,s.jsx)(l.admonition,{title:"Timestamps in logs",type:"tip",children:(0,s.jsxs)(l.p,{children:[(0,s.jsx)(l.code,{children:"moreutils"})," provides the ",(0,s.jsx)(l.code,{children:"ts"})," command that you can pipe your nix command output to in order to get timestamps in the logs."]})}),"\n",(0,s.jsxs)(l.p,{children:["The below is a sample output when building ",(0,s.jsx)(l.a,{href:"https://github.com/srid/haskell-multi-nix/tree/debug",children:"haskell-multi-nix"})," with ",(0,s.jsx)(l.code,{children:"--trace-verbose"}),":"]}),"\n",(0,s.jsx)(l.pre,{children:(0,s.jsx)(l.code,{children:'$ nix --no-eval-cache build -L --trace-verbose github:srid/haskell-multi-nix 2>&1 | ts \'[%H:%M:%S]\'\n[22:45:38] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: default.findPackagesInCabalProject = {"bar":"/nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./bar","foo":"/nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./foo"}\n[22:45:38] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: defaults.packages = {"bar":{"imports":[{"_file":"/nix/store/sv90dpz2fgn93kvzc14szqn77wvjssv0-source/nix/modules/project/defaults.nix, via option perSystem.aarch64-darwin.haskellProjects.default.defaults.packages.bar","imports":[{"source":"/nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./bar"}]}]},"foo":{"imports":[{"_file":"/nix/store/sv90dpz2fgn93kvzc14szqn77wvjssv0-source/nix/modules/project/defaults.nix, via option perSystem.aarch64-darwin.haskellProjects.default.defaults.packages.foo","imports":[{"source":"/nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./foo"}]}]}}\n[22:45:38] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: bar.getCabalExecutables = bar\n[22:45:38] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: foo.getCabalExecutables = \n[22:45:38] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: default.packages:apply {"bar":{"cabal":{"executables":["bar"]},"local":{"toCurrentProject":true,"toDefinedProject":true},"source":"/nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./bar"},"foo":{"cabal":{"executables":[]},"local":{"toCurrentProject":true,"toDefinedProject":true},"source":"/nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./foo"}}\n[22:45:40] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: settings.bar {"haddock":false,"libraryProfiling":false}\n[22:45:40] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: bar.callCabal2nix /nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./bar\n[22:45:40] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: bar.mkNewStorePath /nix/store/hr0a6v8wwwvw323clv9x28zknd5fqz84-source-bar\n[22:45:41] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: bar.cabal2nixDeriver /nix/store/pxcqizj7mvmwflx7hxlq7ll5bdmcis2a-cabal2nix-bar\n[22:45:41] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: settings.foo {"haddock":false,"libraryProfiling":false}\n[22:45:41] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: foo.callCabal2nix /nix/store/5zvwxw2n801bbjcz3685dp20y8afjmld-source/./foo\n[22:45:41] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: foo.mkNewStorePath /nix/store/bpybsny4gd5jnw0lvk5khpq7md6nwg5f-source-foo\n[22:45:41] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: foo.cabal2nixDeriver /nix/store/i36x01zcdpm7c3m3fjjq1qa4slv61jpw-cabal2nix-foo\n[22:45:41] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: foo.fromSdist /nix/store/qrsy0bm4khcs1hxy0rhb6m3g2bvi15sm-foo-0.1.0.0\n[22:45:41] trace: DEBUG[haskell-flake] [haskell-multi-nix#haskellProjects.default]: bar.fromSdist /nix/store/anyx51rm5gjdclafcz5is7jpqgfq2i4w-bar-0.1.0.0\n'})}),"\n",(0,s.jsx)(l.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsxs)(l.li,{children:["Read more about ",(0,s.jsxs)(l.a,{href:"https://nixos.asia/en/traceVerbose",children:["the ",(0,s.jsx)(l.code,{children:"traceVerbose"})," function"]})," which haskell-flake uses to produce the above logs."]}),"\n"]})]})}function u(e={}){const{wrapper:l}={...(0,t.a)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,l,a)=>{a.d(l,{Z:()=>i,a:()=>r});var s=a(7294);const t={},n=s.createContext(t);function r(e){const l=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function i(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(n.Provider,{value:l},e.children)}}}]);